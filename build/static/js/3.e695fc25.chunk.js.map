{"version":3,"sources":["components/UI/GoBackMessage/GoBackMessage.js","components/UI/GoBackMessage/GoBackMessage.module.css","components/containers/Orders/OrderCard/OrderData/OrderData.module.css","components/containers/Orders/OrderCard/OrderCard.module.css","components/containers/Orders/OrdersPaginationPanel/OrdersPaginationPanel.module.css","components/containers/Orders/Orders.module.css","components/containers/Orders/OrderCard/OrderData/OrderData.js","components/containers/Orders/OrderCard/OrderCard.js","components/containers/Orders/OrdersPaginationPanel/OrdersPaginationPanel.js","components/containers/Orders/ordersControlForm/ordersControlForm.js","components/containers/Orders/store/actions.js","components/containers/Orders/Orders.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Button_Button__WEBPACK_IMPORTED_MODULE_1__","_GoBackMessage_module_css__WEBPACK_IMPORTED_MODULE_2__","_GoBackMessage_module_css__WEBPACK_IMPORTED_MODULE_2___default","react_router__WEBPACK_IMPORTED_MODULE_3__","withRouter","_ref","content","history","GoBackMessage","styles","a","createElement","className","handleClick","goBack","type","module","exports","DataHeader","Category","Price","OrderCard","dateStyle","toggleButton","OrderId","Order","OrderPaginationPanel","pageContainer","activePageStyle","Orders","OrdersContainer","ControlsContainer","OrderData","ingredients","contactData","delivery","price","react_default","Fragment","map","el","quantity","key","ingredient","entries","Object","value","defaultProps","orderId","contact","date","_useState","useState","_useState2","slicedToArray","isCardOpen","setIsCardOpen","mappedContactInfo","push","defineProperty","parsedOrderId","replace","onClick","Icon","iconType","faCaretUp","faCaretDown","size","OrderCard_OrderData_OrderData","OrdersPaginationPanel","pages","pageNumberClick","nextPageClick","previousPageClick","firstPageClick","lastPageClick","currentPage","faAngleDoubleLeft","faAngleLeft","page","id","event","faAngleRight","faAngleDoubleRight","ordersControlForm","data","elementType","elementConfig","options","displayValue","disabled","label","validation","required","valid","errorMessage","placeholder","hasUserInput","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","isLoadingRequest","isLoggedIn","idToken","userId","onFetchOrders","sortByControls","setSortByControls","_useState3","_useState4","searchControls","setSearchControls","_useState5","ordersPerPage","_useState7","_useState8","setCurrentPage","_useState9","_useState10","totalPageNumbers","setTotalPageNumbers","_useState11","_useState12","displayedOrders","setDisplayedOrders","useEffect","sortedOrders","arr","sort","b","Date","deliveryMethod","localeCompare","setSortedOrders","matchedOrders","matchValue","regex","RegExp","filter","match","matchSearchResults","lastOrderIndex","firstOrderIndex","slice","setPaginationOrdersDisplay","numbersArr","i","Math","ceil","length","setPageNumbers","noOrdersMessage","Spinner","Input","objectSpread","handleChange","controlFormCopy","target","handleSortOrdersChange","handleSearchOrdersChange","Orders_OrdersPaginationPanel_OrdersPaginationPanel","order","Orders_OrderCard_OrderCard","customer","toFixed","connect","state","orderForm","isLoading","auth","dispatch","asyncToGenerator","regenerator_default","mark","_callee","params","fetchedOrders","wrap","_context","prev","next","FETCH_ORDERS_INIT","concat","axiosInstance","get","sent","t0","FETCH_ORDERS_FAIL","stop","_x","apply","this","arguments","fetchOrdersFromDatabase","memo"],"mappings":"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","file":"static/js/3.e695fc25.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '../Button/Button';\nimport styles from './GoBackMessage.module.css';\nimport { withRouter } from 'react-router';\n\nexport const GoBackMessage = ({ content, history }) => {\n\t// CSS Modules styles:\n\tconst { GoBackMessage } = styles;\n\n\tconst handleBackClick = () => history.goBack();\n\n\treturn (\n\t\t<div className={GoBackMessage}>\n\t\t\t{content}\n\t\t\t<Button handleClick={handleBackClick} type=\"Danger\">\n\t\t\t\tGo back\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(GoBackMessage);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GoBackMessage\":\"GoBackMessage_GoBackMessage__2Qz-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataHeader\":\"OrderData_DataHeader__270R7\",\"Category\":\"OrderData_Category__3-RpM\",\"Price\":\"OrderData_Price__1YunB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderCard\":\"OrderCard_OrderCard__3Ny_V\",\"dateStyle\":\"OrderCard_dateStyle__1N6ZK\",\"toggleButton\":\"OrderCard_toggleButton__2OtgH\",\"OrderId\":\"OrderCard_OrderId__1du2B\",\"Order\":\"OrderCard_Order__2Vklf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderPaginationPanel\":\"OrdersPaginationPanel_OrderPaginationPanel__1ulqA\",\"pageContainer\":\"OrdersPaginationPanel_pageContainer__3FR8w\",\"activePageStyle\":\"OrdersPaginationPanel_activePageStyle__1_SqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Orders_Orders__2RKNz\",\"OrdersContainer\":\"Orders_OrdersContainer__yJJxM\",\"ControlsContainer\":\"Orders_ControlsContainer__3ls8s\"};","import React from 'react';\nimport styles from './OrderData.module.css';\nimport PropTypes from 'prop-types';\n\nconst OrderData = ({ ingredients, contactData, delivery, price }) => {\n\t// CSS modules styles:\n\tconst { Price, DataHeader, Category } = styles;\n\treturn (\n\t\t<>\n\t\t\t<div className={DataHeader}>\n\t\t\t\tIngredients:\n\t\t\t\t<ul>\n\t\t\t\t\t{ingredients.map(\n\t\t\t\t\t\tel =>\n\t\t\t\t\t\t\tel.quantity > 0 && (\n\t\t\t\t\t\t\t\t<li key={el.ingredient}>\n\t\t\t\t\t\t\t\t\t<span className={Category}>\n\t\t\t\t\t\t\t\t\t\t{el.ingredient}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\tx {el.quantity}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t<div className={DataHeader}>\n\t\t\t\tContact information:\n\t\t\t\t<ul>\n\t\t\t\t\t{contactData.map(el => {\n\t\t\t\t\t\tconst entries = Object.entries(el);\n\t\t\t\t\t\tconst key = entries[0][0];\n\t\t\t\t\t\tconst value = entries[0][1];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={key}>\n\t\t\t\t\t\t\t\t<span className={Category}>{key}:</span>\n\t\t\t\t\t\t\t\t{value !== '' ? value : 'n/a'}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<p className={DataHeader}>\n\t\t\t\t<span className={Category}>Delivery method: </span>\n\t\t\t\t{delivery}\n\t\t\t</p>\n\t\t\t<p className={DataHeader}>\n\t\t\t\tTotal price:<span className={Price}>${price}</span>\n\t\t\t</p>\n\t\t</>\n\t);\n};\n\nOrderData.propTypes = {\n\tingredients: PropTypes.array,\n\tcontactData: PropTypes.array,\n\tdelivery: PropTypes.string,\n\tprice: PropTypes.string,\n};\n\nOrderData.defaultProps = {\n\tingredients: [{ ingredient: 'N/A', quantity: 'N/A' }],\n\tprice: 'N/A',\n\torderId: 'N/A',\n};\n\nexport default OrderData;\n","import React, { useState } from 'react';\nimport OrderData from './OrderData/OrderData';\nimport Icon from '../../../UI/Icon/Icon';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport styles from './OrderCard.module.css';\nimport PropTypes from 'prop-types';\n\nconst OrderCard = ({\n\tingredients,\n\tprice,\n\torderId,\n\tcontact,\n\tdelivery,\n\tdate,\n}) => {\n\t// Local state hooks:\n\tconst [isCardOpen, setIsCardOpen] = useState(false);\n\n\t// CSS Modules styles:\n\tconst { OrderCard, dateStyle, toggleButton } = styles;\n\n\tlet mappedContactInfo = [];\n\tfor (let key in contact) {\n\t\tmappedContactInfo.push({ [key]: contact[key] });\n\t}\n\n\tconst parsedOrderId = orderId.replace(/[-!@#$ %^&* _(),.?\":{}|<>]/g, '');\n\n\treturn (\n\t\t<div className={OrderCard}>\n\t\t\t<p>Order id: {parsedOrderId}</p>\n\t\t\t<p className={dateStyle}>{date}</p>\n\t\t\t<button\n\t\t\t\tclassName={toggleButton}\n\t\t\t\tonClick={() => setIsCardOpen(!isCardOpen)}\n\t\t\t>\n\t\t\t\t<Icon\n\t\t\t\t\ticonType={!isCardOpen ? faCaretDown : faCaretUp}\n\t\t\t\t\tsize=\"2x\"\n\t\t\t\t/>\n\t\t\t</button>\n\t\t\t{isCardOpen && (\n\t\t\t\t<OrderData\n\t\t\t\t\tingredients={ingredients}\n\t\t\t\t\tcontactData={mappedContactInfo}\n\t\t\t\t\tdelivery={delivery}\n\t\t\t\t\tprice={price}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nOrderCard.propTypes = {\n\tingredients: PropTypes.array,\n\tprice: PropTypes.string,\n\torderId: PropTypes.string,\n\tcontact: PropTypes.object,\n\tdelivery: PropTypes.string,\n\tdate: PropTypes.string,\n};\n\nexport default OrderCard;\n","import React from 'react';\nimport styles from './OrdersPaginationPanel.module.css';\nimport Icon from '../../../UI/Icon/Icon';\nimport {\n\tfaAngleRight,\n\tfaAngleLeft,\n\tfaAngleDoubleRight,\n\tfaAngleDoubleLeft,\n} from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\n\nconst OrdersPaginationPanel = ({\n\tpages,\n\tpageNumberClick,\n\tnextPageClick,\n\tpreviousPageClick,\n\tfirstPageClick,\n\tlastPageClick,\n\tcurrentPage,\n}) => {\n\t// CSS Modules styles:\n\tconst { OrderPaginationPanel, pageContainer, activePageStyle } = styles;\n\n\treturn (\n\t\t<div className={OrderPaginationPanel}>\n\t\t\t<button onClick={firstPageClick}>\n\t\t\t\t<Icon iconType={faAngleDoubleLeft} size=\"2x\" />\n\t\t\t</button>\n\t\t\t<button onClick={previousPageClick}>\n\t\t\t\t<Icon iconType={faAngleLeft} size=\"2x\" />\n\t\t\t</button>\n\t\t\t<div className={pageContainer}>\n\t\t\t\t{pages.map(page => (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tpage === currentPage ? activePageStyle : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkey={page}\n\t\t\t\t\t\tid={page}\n\t\t\t\t\t\tonClick={event => pageNumberClick(event)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{page}\n\t\t\t\t\t</button>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<button onClick={nextPageClick}>\n\t\t\t\t<Icon iconType={faAngleRight} size=\"2x\" />\n\t\t\t</button>\n\t\t\t<button onClick={lastPageClick}>\n\t\t\t\t<Icon iconType={faAngleDoubleRight} size=\"2x\" />\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nOrdersPaginationPanel.propTypes = {\n\tpages: PropTypes.array,\n\tcurrentPage: PropTypes.number,\n\tpagesNumberClick: PropTypes.func,\n\tnextPageClick: PropTypes.func,\n\tpreviousPageClick: PropTypes.func,\n\tfirstPageClick: PropTypes.func,\n\tlastPageClick: PropTypes.func,\n};\n\nexport default OrdersPaginationPanel;\n","const ordersControlForm = [\n\t{\n\t\tdata: 'sortBy',\n\t\telementType: 'select',\n\t\telementConfig: {\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tvalue: '',\n\t\t\t\t\tdisplayValue: 'Please select a sorting method',\n\t\t\t\t\tdisabled: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 'NEWEST',\n\t\t\t\t\tdisplayValue: 'Newest',\n\t\t\t\t},\n\t\t\t\t{ value: 'OLDEST', displayValue: 'Oldest' },\n\t\t\t\t{ value: 'PRICE', displayValue: 'Price' },\n\t\t\t\t{ value: 'DELIVERY', displayValue: 'Delivery method' },\n\t\t\t],\n\t\t\tlabel: 'Sort orders by:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: false,\n\t\t\tvalid: true,\n\t\t\terrorMessage: '',\n\t\t},\n\t},\n\n\t{\n\t\tdata: 'search',\n\t\telementType: 'input',\n\t\telementConfig: {\n\t\t\ttype: 'text',\n\t\t\tplaceholder: 'Enter anything here',\n\t\t\tlabel: 'Search an order ID:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: false,\n\t\t\thasUserInput: false,\n\t\t\tvalid: true,\n\t\t\terrorMessage: '',\n\t\t},\n\t},\n];\n\nexport default ordersControlForm;\n","import axiosInstance from '../../../../axios/axios-orders';\nimport {\n\tFETCH_ORDERS_INIT,\n\tFETCH_ORDERS_SUCCESS,\n\tFETCH_ORDERS_FAIL,\n} from './constants';\n\nexport const fetchOrderInit = () => {\n\treturn {\n\t\ttype: FETCH_ORDERS_INIT,\n\t};\n};\n\nexport const fetchOrdersSuccess = orders => {\n\treturn {\n\t\ttype: FETCH_ORDERS_SUCCESS,\n\t\torders: orders,\n\t};\n};\n\nexport const fetchOrderFail = () => {\n\treturn {\n\t\ttype: FETCH_ORDERS_FAIL,\n\t};\n};\n\nexport const fetchOrdersFromDatabase = (idToken, userId) => {\n\treturn async dispatch => {\n\t\tdispatch(fetchOrderInit());\n\t\ttry {\n\t\t\t// Query params to set authentication by a token && filter fetched orders by userId\n\t\t\tconst params = `?auth=${idToken}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\n\n\t\t\tconst orders = await axiosInstance.get(`/orders.json${params}`);\n\n\t\t\t// Parse json into an array and add the order id\n\t\t\tconst fetchedOrders = [];\n\t\t\tfor (let key in orders.data) {\n\t\t\t\tfetchedOrders.push({ ...orders.data[key], id: key });\n\t\t\t}\n\n\t\t\tdispatch(fetchOrdersSuccess(fetchedOrders));\n\t\t} catch (error) {\n\t\t\tdispatch(fetchOrderFail());\n\t\t}\n\t};\n};\n","import React, { useState, memo, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport OrderCard from './OrderCard/OrderCard';\nimport OrderPaginationPanel from './OrdersPaginationPanel/OrdersPaginationPanel';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport Input from '../../UI/Input/Input';\nimport GoBackMessage from '../../UI/GoBackMessage/GoBackMessage';\nimport ordersControlForm from './ordersControlForm/ordersControlForm';\nimport { fetchOrdersFromDatabase } from './store/actions';\nimport styles from './Orders.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Orders = ({\n\torders,\n\tisLoadingRequest,\n\tisLoggedIn,\n\tidToken,\n\tuserId,\n\tonFetchOrders,\n}) => {\n\t// CSS Modules styles:\n\tconst { Orders, OrdersContainer, ControlsContainer } = styles;\n\n\t// Local state hooks:\n\tconst [sortByControls, setSortByControls] = useState(ordersControlForm[0]);\n\tconst [searchControls, setSearchControls] = useState(ordersControlForm[1]);\n\tconst [ordersPerPage] = useState(5);\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [totalPageNumbers, setTotalPageNumbers] = useState([]);\n\tconst [displayedOrders, setDisplayedOrders] = useState([]);\n\n\t// Fetch orders:\n\tuseEffect(() => {\n\t\tif (isLoggedIn) onFetchOrders(idToken, userId);\n\t}, [idToken, onFetchOrders, userId, isLoggedIn]);\n\n\t// Handle select input change:\n\tconst handleSortOrdersChange = event => {\n\t\tconst controlFormCopy = { ...sortByControls };\n\t\tcontrolFormCopy.value = event.target.value;\n\t\tsetSortByControls(controlFormCopy);\n\t};\n\n\t// Handle search input change:\n\tconst handleSearchOrdersChange = event => {\n\t\tconst controlFormCopy = { ...searchControls };\n\t\tcontrolFormCopy.value = event.target.value;\n\t\tsetSearchControls(controlFormCopy);\n\t};\n\n\t// Handle clicking on a specific page number:\n\tconst handlePageNumberClick = event => setCurrentPage(+event.target.id);\n\n\t// Handle pagination pangel buttons click:\n\tconst handleNextPageClick = () =>\n\t\tcurrentPage < +totalPageNumbers.length &&\n\t\tsetCurrentPage(currentPage + 1);\n\n\tconst handlePreviousPageClick = () =>\n\t\tcurrentPage > 1 && setCurrentPage(currentPage - 1);\n\n\tconst handleFirstPageClick = () => setCurrentPage(1);\n\n\tconst handleLastPageClick = () => setCurrentPage(totalPageNumbers.length);\n\n\t// Switch statement to return a sorted array of orders by type or sort:\n\tconst setSortedOrders = (type, arr) => {\n\t\tswitch (type) {\n\t\t\tcase 'NEWEST':\n\t\t\t\treturn arr.sort((a, b) => new Date(b.date) - new Date(a.date));\n\t\t\tcase 'OLDEST':\n\t\t\t\treturn arr.sort((a, b) => new Date(a.date) - new Date(b.date));\n\t\t\tcase 'PRICE':\n\t\t\t\treturn arr.sort((a, b) => b.price - a.price);\n\t\t\tcase 'DELIVERY':\n\t\t\t\treturn arr.sort((a, b) =>\n\t\t\t\t\ta.deliveryMethod.localeCompare(b.deliveryMethod)\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn arr;\n\t\t}\n\t};\n\tconst sortedOrders = setSortedOrders(sortByControls.value, orders);\n\n\t// Set the sorted array as the array to be rendered to the UI:\n\tuseEffect(() => {\n\t\tsetDisplayedOrders(sortedOrders);\n\t}, [orders, sortByControls.value, sortedOrders]);\n\n\t// Search the orders array for matches with the value of the search input field:\n\tuseEffect(() => {\n\t\tconst matchSearchResults = matchValue => {\n\t\t\tconst regex = new RegExp(matchValue, 'gi');\n\t\t\treturn orders.filter(el => (el.id ? el.id.match(regex) : orders));\n\t\t};\n\t\tconst matchedOrders = matchSearchResults(searchControls.value);\n\n\t\tsetDisplayedOrders(matchedOrders);\n\t}, [orders, searchControls.value]);\n\n\t// Set pagination display and page numbers:\n\tuseEffect(() => {\n\t\tconst setPaginationOrdersDisplay = () => {\n\t\t\tconst lastOrderIndex = currentPage * ordersPerPage;\n\t\t\tconst firstOrderIndex = lastOrderIndex - ordersPerPage;\n\n\t\t\tsetDisplayedOrders(orders.slice(firstOrderIndex, lastOrderIndex));\n\t\t};\n\t\tsetPaginationOrdersDisplay();\n\n\t\t// Calculate the total pages number:\n\t\tconst setPageNumbers = () => {\n\t\t\tlet numbersArr = [];\n\t\t\tfor (\n\t\t\t\tlet i = 1;\n\t\t\t\ti <= Math.ceil(orders.length / ordersPerPage);\n\t\t\t\ti++\n\t\t\t) {\n\t\t\t\tnumbersArr.push(i);\n\t\t\t\tsetTotalPageNumbers(numbersArr);\n\t\t\t}\n\t\t};\n\t\tsetPageNumbers();\n\t}, [currentPage, orders, orders.length, ordersPerPage]);\n\n\t// If no orders are available and/or user is signed out:\n\tconst noOrdersMessage =\n\t\t!isLoggedIn && !isLoadingRequest\n\t\t\t? `The Orders area is for members only! in order to review your previous orders, please sign in as a member first`\n\t\t\t: `No previous orders found.`;\n\n\treturn (\n\t\t<div className={Orders}>\n\t\t\t<h1>Your orders:</h1>\n\t\t\t{isLoadingRequest ? (\n\t\t\t\t<Spinner />\n\t\t\t) : !isLoadingRequest && orders.length > 0 && isLoggedIn ? (\n\t\t\t\t<>\n\t\t\t\t\t<div className={OrdersContainer}>\n\t\t\t\t\t\t<div className={ControlsContainer}>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\telementType={sortByControls.elementType}\n\t\t\t\t\t\t\t\telementConfig={{\n\t\t\t\t\t\t\t\t\t...sortByControls.elementConfig,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={sortByControls.value}\n\t\t\t\t\t\t\t\tkey={sortByControls.data}\n\t\t\t\t\t\t\t\tvalidation={{ ...sortByControls.validation }}\n\t\t\t\t\t\t\t\thandleChange={event =>\n\t\t\t\t\t\t\t\t\thandleSortOrdersChange(event)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tdata={searchControls.data}\n\t\t\t\t\t\t\t\telementType={searchControls.elementType}\n\t\t\t\t\t\t\t\telementConfig={{\n\t\t\t\t\t\t\t\t\t...searchControls.elementConfig,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={searchControls.value}\n\t\t\t\t\t\t\t\tkey={searchControls.data}\n\t\t\t\t\t\t\t\tvalidation={{ ...searchControls.validation }}\n\t\t\t\t\t\t\t\thandleChange={event =>\n\t\t\t\t\t\t\t\t\thandleSearchOrdersChange(event)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<OrderPaginationPanel\n\t\t\t\t\t\t\tpages={totalPageNumbers}\n\t\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t\t\tpageNumberClick={handlePageNumberClick}\n\t\t\t\t\t\t\tnextPageClick={handleNextPageClick}\n\t\t\t\t\t\t\tpreviousPageClick={handlePreviousPageClick}\n\t\t\t\t\t\t\tfirstPageClick={handleFirstPageClick}\n\t\t\t\t\t\t\tlastPageClick={handleLastPageClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{displayedOrders.map(\n\t\t\t\t\t\t\torder =>\n\t\t\t\t\t\t\t\torder.id &&\n\t\t\t\t\t\t\t\torder.ingredients &&\n\t\t\t\t\t\t\t\torder.price && (\n\t\t\t\t\t\t\t\t\t<OrderCard\n\t\t\t\t\t\t\t\t\t\tkey={order.id}\n\t\t\t\t\t\t\t\t\t\torderId={order.id}\n\t\t\t\t\t\t\t\t\t\tdate={order.date}\n\t\t\t\t\t\t\t\t\t\tingredients={order.ingredients}\n\t\t\t\t\t\t\t\t\t\tcontact={order.customer}\n\t\t\t\t\t\t\t\t\t\tdelivery={order.deliveryMethod}\n\t\t\t\t\t\t\t\t\t\tprice={order.price.toFixed(2)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<GoBackMessage content={noOrdersMessage} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nOrders.propTypes = {\n\torders: PropTypes.array,\n\tisLoadingRequest: PropTypes.bool,\n\tonFetchOrders: PropTypes.func,\n\tisLoggedIn: PropTypes.bool,\n\tidToken: PropTypes.string,\n\tuserId: PropTypes.string,\n};\n\n// Redux setup:\nconst mapStateToProps = state => {\n\treturn {\n\t\torders: state.orderForm.orders,\n\t\tisLoadingRequest: state.orderForm.isLoading,\n\t\tisLoggedIn: state.auth.isLoggedIn,\n\t\tidToken: state.auth.idToken,\n\t\tuserId: state.auth.userId,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonFetchOrders: (idToken, userId) =>\n\t\t\tdispatch(fetchOrdersFromDatabase(idToken, userId)),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(memo(Orders));\n"],"sourceRoot":""}