{"version":3,"sources":["components/UI/GoBackMessage/GoBackMessage.js","components/UI/GoBackMessage/GoBackMessage.module.css","components/CheckoutSummary/CheckoutSummary.module.css","components/CheckoutSummary/ContactData/ContactData.module.css","components/containers/Checkout/Checkout.module.css","utilities/helpers/helpers.js","components/CheckoutSummary/CheckoutSummary.js","components/CheckoutSummary/ContactData/store/actions.js","components/CheckoutSummary/ContactData/OrderFormTemplate/OrderFormTemplate.js","components/CheckoutSummary/ContactData/ContactData.js","components/containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Button_Button__WEBPACK_IMPORTED_MODULE_1__","_GoBackMessage_module_css__WEBPACK_IMPORTED_MODULE_2__","_GoBackMessage_module_css__WEBPACK_IMPORTED_MODULE_2___default","react_router__WEBPACK_IMPORTED_MODULE_3__","withRouter","_ref","content","history","GoBackMessage","styles","a","createElement","className","handleClick","goBack","type","module","exports","CheckoutSummary","BurgerDisplay","Price","ContactData","Checkout","CheckoutHeader","areIngredientsSelected","ingredients","some","ingredient","quantity","connect","state","totalPrice","burgerBuilder","isLoggedIn","auth","cancelClick","checkoutClick","areIngredientsAvailable","pathname","location","react_default","Fragment","toFixed","Burger","Button","purchaseBurgerSuccess","order","PURCHASE_BURGER_SUCCESS","orderData","OrderFormTemplate","data","elementType","elementConfig","placeholder","label","value","validation","required","hasUserInput","valid","errorMessage","min","emailValidationRegExp","options","displayValue","isLoadingRequest","orderForm","isLoading","idToken","email","userId","dispatch","onOrderClick","redirectBack","redirectOnSuccess","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","PURCHASE_BURGER_INIT","axiosInstance","post","concat","t0","PURCHASE_BURGER_FAIL","stop","_x","apply","this","arguments","postPurchasedBurger","requestMessageComponent","_useState","useState","ingredientsArr","slicedToArray","_useState3","price","_useState5","_useState6","showFormInvalidMessage","setShowFormInvalidMessage","_useForm","useForm","_useForm2","inputs","isFormValid","handleFormChange","orderorderFormCopy","toConsumableArray","setEmailIfLoggedIn","handleOrderSubmitClick","_ref2","event","dateString","hourStrig","preventDefault","abrupt","Date","toDateString","toLocaleTimeString","date","customer","name","phone","address","postal","requests","deliveryMethod","replace","Spinner","action","onSubmit","map","form","i","Input","key","focused","objectSpread","handleChange","handleEnterPress","FormErrorMessage","errorType","d","__webpack_exports__","Checkout_Checkout","match","components_CheckoutSummary_CheckoutSummary","react_router","path","component"],"mappings":"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","file":"static/js/4.c7867324.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '../Button/Button';\nimport styles from './GoBackMessage.module.css';\nimport { withRouter } from 'react-router';\n\nexport const GoBackMessage = ({ content, history }) => {\n\t// CSS Modules styles:\n\tconst { GoBackMessage } = styles;\n\n\tconst handleBackClick = () => history.goBack();\n\n\treturn (\n\t\t<div className={GoBackMessage}>\n\t\t\t{content}\n\t\t\t<Button handleClick={handleBackClick} type=\"Danger\">\n\t\t\t\tGo back\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(GoBackMessage);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GoBackMessage\":\"GoBackMessage_GoBackMessage__2Qz-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2mwwu\",\"BurgerDisplay\":\"CheckoutSummary_BurgerDisplay__1bRid\",\"Price\":\"CheckoutSummary_Price__1Z8VQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1i8t2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkout\":\"Checkout_Checkout__1sKAQ\",\"CheckoutHeader\":\"Checkout_CheckoutHeader__3JZxh\"};","// Check if ingredients were selected in the BurgerBuilder:\nexport const areIngredientsSelected = ingredients =>\n\tingredients\n\t\t? ingredients.some(ingredient => ingredient.quantity > 0)\n\t\t: null;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Burger from '../Burger/Burger';\nimport Button from '../UI/Button/Button';\nimport GoBackMessage from '../UI/GoBackMessage/GoBackMessage';\nimport { areIngredientsSelected } from '../../utilities/helpers/helpers';\nimport styles from './CheckoutSummary.module.css';\nimport PropTypes from 'prop-types';\n\nconst CheckoutSummary = ({\n\tcancelClick,\n\tcheckoutClick,\n\tingredients,\n\ttotalPrice,\n\tisLoggedIn,\n\thistory,\n}) => {\n\t// CSS Modules styles:\n\tconst { CheckoutSummary, BurgerDisplay, Price } = styles;\n\n\tconst areIngredientsAvailable = areIngredientsSelected(ingredients);\n\n\tconst message =\n\t\t'It seems like no ingredients were selected! Please select burger ingredients in order to checkout';\n\n\tconst { pathname } = history.location;\n\n\treturn (\n\t\t<div className={CheckoutSummary}>\n\t\t\t{areIngredientsAvailable && isLoggedIn ? (\n\t\t\t\t<div className={BurgerDisplay}>\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tTotal price:\n\t\t\t\t\t\t\t<span className={Price}>\n\t\t\t\t\t\t\t\t${totalPrice.toFixed(2)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Burger ingredients={ingredients} />\n\t\t\t\t\t</>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<GoBackMessage content={message} />\n\t\t\t)}\n\t\t\t{areIngredientsAvailable && isLoggedIn && (\n\t\t\t\t<>\n\t\t\t\t\t{pathname !== '/checkout/contact-data' && (\n\t\t\t\t\t\t<Button handleClick={checkoutClick} type=\"Confirm\">\n\t\t\t\t\t\t\tContinue\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t\t<Button handleClick={cancelClick} type=\"Danger\">\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nCheckoutSummary.propTypes = {\n\tingredients: PropTypes.array,\n\tcancelClick: PropTypes.func,\n\tcheckoutClick: PropTypes.func,\n\tlocation: PropTypes.object,\n\tisLoggedIn: PropTypes.bool,\n\thistory: PropTypes.object,\n};\n\n// Redux setup:\nconst mapStateToProps = state => {\n\treturn {\n\t\ttotalPrice: state.burgerBuilder.totalPrice,\n\t\tisLoggedIn: state.auth.isLoggedIn,\n\t};\n};\n\nexport default connect(mapStateToProps)(withRouter(CheckoutSummary));\n","import axiosInstance from '../../../../axios/axios-orders';\nimport {\n\tPURCHASE_BURGER_SUCCESS,\n\tPURCHASE_BURGER_FAIL,\n\tPURCHASE_BURGER_INIT,\n} from './constants';\n\nexport const purchaseBurgerSuccess = order => {\n\treturn {\n\t\ttype: PURCHASE_BURGER_SUCCESS,\n\t\torderData: order,\n\t};\n};\n\nexport const purchaseBurgerFail = error => {\n\treturn {\n\t\ttype: PURCHASE_BURGER_FAIL,\n\t};\n};\n\nexport const purchaseBurgerInit = () => {\n\treturn {\n\t\ttype: PURCHASE_BURGER_INIT,\n\t};\n};\n\nexport const postPurchasedBurger = (order, redirectOnSuccess, idToken) => {\n\treturn async dispatch => {\n\t\tdispatch(purchaseBurgerInit());\n\t\ttry {\n\t\t\tawait axiosInstance.post(`/orders.json?auth=${idToken}`, order);\n\t\t\tdispatch(purchaseBurgerSuccess(order));\n\t\t\tredirectOnSuccess('/');\n\t\t} catch (error) {\n\t\t\tdispatch(purchaseBurgerFail(error));\n\t\t}\n\t};\n};\n","const OrderFormTemplate = [\n\t{\n\t\tdata: 'name',\n\t\telementType: 'input',\n\t\telementConfig: {\n\t\t\ttype: 'text',\n\t\t\tplaceholder: 'Enter your name',\n\t\t\tlabel: '*Name:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: true,\n\t\t\thasUserInput: false,\n\t\t\tvalid: false,\n\t\t\terrorMessage: 'Please enter a name',\n\t\t},\n\t},\n\n\t{\n\t\tdata: 'phone',\n\t\telementType: 'input',\n\t\telementConfig: {\n\t\t\ttype: 'number',\n\t\t\tmin: 0,\n\t\t\tplaceholder: 'Enter your phone number',\n\t\t\tlabel: '*Phone number:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: true,\n\t\t\thasUserInput: false,\n\t\t\tvalid: false,\n\t\t\terrorMessage: 'Please enter a valid phone number',\n\t\t},\n\t},\n\n\t{\n\t\tdata: 'email',\n\t\telementType: 'input',\n\t\telementConfig: {\n\t\t\ttype: 'email',\n\t\t\tplaceholder: 'Enter your email',\n\t\t\tlabel: '*Email:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: true,\n\t\t\temailValidationRegExp: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n\t\t\thasUserInput: false,\n\t\t\tvalid: false,\n\t\t\terrorMessage: 'Please enter a valid email address',\n\t\t},\n\t},\n\n\t{\n\t\tdata: 'address',\n\t\telementType: 'input',\n\t\telementConfig: {\n\t\t\ttype: 'text',\n\t\t\tplaceholder: 'Enter your address',\n\t\t\tlabel: '*Address:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: true,\n\t\t\thasUserInput: false,\n\t\t\tvalid: false,\n\t\t\terrorMessage: 'Please enter a valid address',\n\t\t},\n\t},\n\n\t{\n\t\tdata: 'postal',\n\t\telementType: 'input',\n\t\telementConfig: {\n\t\t\ttype: 'text',\n\t\t\tplaceholder: 'Enter your postal code',\n\t\t\tlabel: '*Postal code:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: true,\n\t\t\thasUserInput: false,\n\t\t\tvalid: false,\n\t\t\terrorMessage: 'Please enter a valid postal code',\n\t\t},\n\t},\n\n\t{\n\t\tdata: 'deliveryMethod',\n\t\telementType: 'select',\n\t\telementConfig: {\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tvalue: 'fastest',\n\t\t\t\t\tdisplayValue: 'Fastest',\n\t\t\t\t},\n\t\t\t\t{ value: 'cheapest', displayValue: 'Cheapest' },\n\t\t\t],\n\t\t\tlabel: 'Delivery Method:',\n\t\t},\n\t\tvalue: 'fastest',\n\t\tvalidation: {\n\t\t\trequired: true,\n\t\t\tvalid: true,\n\t\t},\n\t},\n\n\t{\n\t\tdata: 'requests',\n\t\telementType: 'textarea',\n\t\telementConfig: {\n\t\t\ttype: 'textarea',\n\t\t\tplaceholder:\n\t\t\t\t'Please specify any additional requests or comments you might have',\n\t\t\tlabel: 'Additional requests:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: false,\n\t\t\tvalid: true,\n\t\t},\n\t},\n];\n\nexport default OrderFormTemplate;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { postPurchasedBurger } from './store/actions';\nimport Button from '../../UI/Button/Button';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport Input from '../../UI/Input/Input';\nimport OrderFormTemplate from './OrderFormTemplate/OrderFormTemplate';\nimport axiosInstance from '../../../axios/axios-orders';\nimport requestMessageComponent from '../../hoc/requestMessageComponent/requestMessageComponent';\nimport FormErrorMessage from '../../UI/FormErrorMessage/FormErrorMessage';\nimport { areIngredientsSelected } from '../../../utilities/helpers/helpers';\nimport useForm from '../../../utilities/custom-hooks/useForm';\nimport styles from './ContactData.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ContactData = ({\n\tingredients,\n\ttotalPrice,\n\tisLoadingRequest,\n\temail,\n\tisLoggedIn,\n\tuserId,\n\tidToken,\n\tonOrderClick,\n\thistory,\n}) => {\n\t// Local state hooks:\n\tconst [ingredientsArr] = useState(ingredients);\n\tconst [price] = useState(totalPrice);\n\tconst [showFormInvalidMessage, setShowFormInvalidMessage] = useState(false);\n\n\t// Form fields & validation data from useForm custom hook:\n\tconst [inputs, , isFormValid, , handleFormChange] = useForm(\n\t\tOrderFormTemplate\n\t);\n\n\t// If a user is logged in, set the email value to the user email by default\n\tconst setEmailIfLoggedIn = () => {\n\t\tif (isLoggedIn && email) {\n\t\t\tconst orderorderFormCopy = [...inputs];\n\t\t\torderorderFormCopy[2].value = email;\n\t\t\torderorderFormCopy[2].validation.valid = true;\n\t\t\torderorderFormCopy[2].validation.hasUserInput = true;\n\t\t}\n\t};\n\tsetEmailIfLoggedIn();\n\n\tconst handleOrderSubmitClick = async event => {\n\t\tevent.preventDefault();\n\n\t\tif (!isFormValid) {\n\t\t\tsetShowFormInvalidMessage(true);\n\t\t\treturn;\n\t\t}\n\n\t\tconst dateString = new Date().toDateString();\n\t\tconst hourStrig = new Date().toLocaleTimeString();\n\n\t\tconst orderorderFormCopy = [...inputs];\n\t\tconst order = {\n\t\t\tdate: `${dateString}, ${hourStrig}`,\n\t\t\tuserId: userId,\n\t\t\tingredients: ingredientsArr,\n\t\t\tprice: price,\n\t\t\tcustomer: {\n\t\t\t\tname: orderorderFormCopy[0].value,\n\t\t\t\tphone: orderorderFormCopy[1].value,\n\t\t\t\temail: orderorderFormCopy[2].value,\n\t\t\t\taddress: orderorderFormCopy[3].value,\n\t\t\t\tpostal: orderorderFormCopy[4].value,\n\t\t\t\trequests: orderorderFormCopy[6].value,\n\t\t\t},\n\t\t\tdeliveryMethod: orderorderFormCopy[5].value,\n\t\t};\n\n\t\tonOrderClick(order, history.replace, idToken);\n\t};\n\n\tconst areIngredientsAvailable = areIngredientsSelected(ingredients);\n\n\t// CSS Modules styles:\n\tconst { ContactData } = styles;\n\n\treturn (\n\t\t<>\n\t\t\t{isLoggedIn && areIngredientsAvailable && (\n\t\t\t\t<div className={ContactData}>\n\t\t\t\t\t<h3>Enter your contact information:</h3>\n\t\t\t\t\t{isLoadingRequest && isFormValid ? (\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<form action=\"post\" onSubmit={handleOrderSubmitClick}>\n\t\t\t\t\t\t\t{inputs.map((form, i) => (\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tkey={form.data}\n\t\t\t\t\t\t\t\t\tfocused={i === 0}\n\t\t\t\t\t\t\t\t\telementType={form.elementType}\n\t\t\t\t\t\t\t\t\telementConfig={form.elementConfig}\n\t\t\t\t\t\t\t\t\tvalidation={{ ...form.validation }}\n\t\t\t\t\t\t\t\t\tvalue={form.value}\n\t\t\t\t\t\t\t\t\thandleChange={event =>\n\t\t\t\t\t\t\t\t\t\thandleFormChange(event, form.data)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleEnterPress={handleOrderSubmitClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype={showFormInvalidMessage ? 'Danger' : 'Confirm'}\n\t\t\t\t\t\thandleClick={handleOrderSubmitClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tConfirm Order\n\t\t\t\t\t</Button>\n\t\t\t\t\t{showFormInvalidMessage && (\n\t\t\t\t\t\t<FormErrorMessage errorType=\"emptyFields\" />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nContactData.propTypes = {\n\tingredients: PropTypes.array,\n\ttotalPrice: PropTypes.number,\n\tisLoadingRequest: PropTypes.bool,\n\tonOrderClick: PropTypes.func,\n\tidToken: PropTypes.string,\n\tisLoggedIn: PropTypes.bool,\n\temail: PropTypes.string,\n\tuserId: PropTypes.string,\n};\n\n// Redux setup:\nconst mapStateToProps = state => {\n\treturn {\n\t\tingredients: state.burgerBuilder.ingredients,\n\t\ttotalPrice: state.burgerBuilder.totalPrice,\n\t\tisLoadingRequest: state.orderForm.isLoading,\n\t\tidToken: state.auth.idToken,\n\t\tisLoggedIn: state.auth.isLoggedIn,\n\t\temail: state.auth.email,\n\t\tuserId: state.auth.userId,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonOrderClick: (order, redirectBack, idToken) =>\n\t\t\tdispatch(postPurchasedBurger(order, redirectBack, idToken)),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(requestMessageComponent(ContactData, axiosInstance));\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../CheckoutSummary/CheckoutSummary';\nimport ContactData from '../../CheckoutSummary/ContactData/ContactData';\nimport styles from './Checkout.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Checkout = ({ ingredients, history, match }) => {\n\t// CSS Modules styles:\n\tconst { Checkout, CheckoutHeader } = styles;\n\n\tconst handleCancelClick = () => history.goBack();\n\n\tconst handleCheckoutClick = () => history.replace('/checkout/contact-data');\n\n\treturn (\n\t\t<>\n\t\t\t<h1 className={CheckoutHeader}>Your burger:</h1>\n\t\t\t<div className={Checkout}>\n\t\t\t\t<CheckoutSummary\n\t\t\t\t\tingredients={ingredients}\n\t\t\t\t\tcancelClick={handleCancelClick}\n\t\t\t\t\tcheckoutClick={handleCheckoutClick}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/contact-data`}\n\t\t\t\t\tcomponent={ContactData}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nCheckout.propTypes = {\n\tingredients: PropTypes.array,\n\thistory: PropTypes.object,\n\tmatch: PropTypes.object,\n};\n\n// Redux setup:\nconst mapStateToProps = state => {\n\treturn {\n\t\tingredients: state.burgerBuilder.ingredients,\n\t};\n};\n\nexport default connect(mapStateToProps)(Checkout);\n"],"sourceRoot":""}