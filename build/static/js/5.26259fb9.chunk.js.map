{"version":3,"sources":["components/containers/Authentication/SignUp/SignUp.module.css","components/containers/Authentication/SignUp/signUpFormTemplate/signUpFormTemplate.js","components/containers/Authentication/SignUp/SignUp.js"],"names":["module","exports","MainHeader","SignUp","SuccessMessage","signUpFormTemplate","data","elementType","elementConfig","type","placeholder","label","value","validation","required","emailValidationRegExp","hasUserInput","valid","errorMessage","minLength","maxLength","_ref","isLoading","isSignInLoading","authType","error","sentAuthForm","isLoggedIn","isRedirectedToAuth","isBuilding","history","_useState","useState","_useState2","Object","slicedToArray","showFormInvalidMessage","setShowFormInvalidMessage","_useState3","_useState4","formErrorType","setFormErrorType","_useForm","useForm","_useForm2","inputs","setInputs","isFormValid","setIsFormValid","handleFormChange","redirect","useRedirect","push","useEffect","handleFormSubmitEvent","event","preventDefault","resetValueCopy","toConsumableArray","forEach","field","styles","react_default","a","createElement","Fragment","className","Spinner","action","onSubmit","map","i","Input","key","focused","objectSpread","handleChange","handleEnterPress","FormErrorMessage","errorType","AuthErrorMessage","response","message","Button","handleClick","replace","connect","state","auth","burgerBuilder","dispatch","email","password","confirmAuth"],"mappings":"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","file":"static/js/5.26259fb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainHeader\":\"SignUp_MainHeader__3ID58\",\"SignUp\":\"SignUp_SignUp__25lNc\",\"SuccessMessage\":\"SignUp_SuccessMessage__3SeK7\"};","const signUpFormTemplate = [\n\t{\n\t\tdata: 'email',\n\t\telementType: 'input',\n\t\telementConfig: {\n\t\t\ttype: 'email',\n\t\t\tplaceholder: 'Enter an email',\n\t\t\tlabel: 'Email:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: true,\n\t\t\temailValidationRegExp: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n\t\t\thasUserInput: false,\n\t\t\tvalid: false,\n\t\t\terrorMessage:\n\t\t\t\t'Please enter a valid email address (e.g: myemail@mail.com)',\n\t\t},\n\t},\n\n\t{\n\t\tdata: 'password',\n\t\telementType: 'input',\n\t\telementConfig: {\n\t\t\ttype: 'password',\n\t\t\tplaceholder: 'Enter a password',\n\t\t\tlabel: 'Password:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: true,\n\t\t\thasUserInput: false,\n\t\t\tvalid: false,\n\t\t\tminLength: 7,\n\t\t\tmaxLength: 12,\n\t\t\terrorMessage:\n\t\t\t\t'Please enter a valid password (must be 6 to 12 characters)',\n\t\t},\n\t},\n\n\t{\n\t\tdata: 'confirmPassword',\n\t\telementType: 'input',\n\t\telementConfig: {\n\t\t\ttype: 'password',\n\t\t\tplaceholder: 'Re-enter password',\n\t\t\tlabel: 'Confirm Password:',\n\t\t},\n\t\tvalue: '',\n\t\tvalidation: {\n\t\t\trequired: true,\n\t\t\thasUserInput: false,\n\t\t\tvalid: false,\n\t\t\tminLength: 7,\n\t\t\tmaxLength: 12,\n\t\t\terrorMessage: 'Please re-enter the password',\n\t\t},\n\t},\n];\n\nexport default signUpFormTemplate;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport signUpFormTemplate from './signUpFormTemplate/signUpFormTemplate';\nimport Input from '../../../UI/Input/Input';\nimport Button from '../../../UI/Button/Button';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport FormErrorMessage from '../../../UI/FormErrorMessage/FormErrorMessage';\nimport AuthErrorMessage from '../../../UI/AuthErrorMessage/AuthErrorMessage';\nimport { confirmAuth } from '../store/actions';\nimport useForm from '../../../../utilities/custom-hooks/useForm';\nimport useRedirect from '../../../../utilities/custom-hooks/useRedirect';\nimport styles from '../SignUp/SignUp.module.css';\nimport PropTypes from 'prop-types';\n\nexport const SignUp = ({\n\tisLoading,\n\tisSignInLoading,\n\tauthType,\n\terror,\n\tsentAuthForm,\n\tisLoggedIn,\n\tisRedirectedToAuth,\n\tisBuilding,\n\thistory,\n}) => {\n\t// Local state hooks:\n\tconst [showFormInvalidMessage, setShowFormInvalidMessage] = useState(false);\n\tconst [formErrorType, setFormErrorType] = useState('emptyFields');\n\n\t// Form fields & validation data from useForm custom hook:\n\tconst [\n\t\tinputs,\n\t\tsetInputs,\n\t\tisFormValid,\n\t\tsetIsFormValid,\n\t\thandleFormChange,\n\t] = useForm(signUpFormTemplate);\n\n\t// Fire redirect custom hook:\n\tconst redirect = useRedirect(\n\t\tisLoggedIn,\n\t\tisBuilding,\n\t\tisRedirectedToAuth,\n\t\thistory.push,\n\t\t'/checkout'\n\t);\n\n\tuseEffect(() => {\n\t\tif (isLoggedIn) {\n\t\t\tisBuilding && isRedirectedToAuth ? redirect() : history.push('/');\n\t\t}\n\t}, [history, isBuilding, isLoggedIn, isRedirectedToAuth, redirect]);\n\n\tconst handleFormSubmitEvent = event => {\n\t\tevent.preventDefault();\n\n\t\tif (!isFormValid) {\n\t\t\tsetShowFormInvalidMessage(true);\n\t\t\tsetFormErrorType('emptyFields');\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if both passwords are not matching\n\t\tif (inputs[1].value !== inputs[2].value) {\n\t\t\t// Nullify 2nd password field value\n\t\t\tlet resetValueCopy = [...inputs];\n\t\t\tresetValueCopy[2].value = '';\n\n\t\t\tsetInputs(resetValueCopy);\n\t\t\tsetIsFormValid(false);\n\t\t\tsetShowFormInvalidMessage(true);\n\t\t\tsetFormErrorType('noMatch');\n\t\t\treturn;\n\t\t}\n\n\t\t// If all fields are valid\n\t\tif (isFormValid) {\n\t\t\tsentAuthForm(inputs[0].value, inputs[1].value, 'signup');\n\n\t\t\tlet resetValueCopy = [...inputs];\n\t\t\tresetValueCopy.forEach(field => (field.value = ''));\n\n\t\t\tsetInputs(resetValueCopy);\n\t\t\tsetShowFormInvalidMessage(false);\n\t\t}\n\t};\n\n\tconst handleCancelClick = () => history.replace('/');\n\n\t// CSS modules styles:\n\tconst { SignUp, MainHeader } = styles;\n\n\treturn (\n\t\t<>\n\t\t\t<h1 className={MainHeader}>Registration</h1>\n\t\t\t<div className={SignUp}>\n\t\t\t\t{isLoading && !isSignInLoading ? (\n\t\t\t\t\t<Spinner />\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h2>Become a new member</h2>\n\t\t\t\t\t\t<form action=\"post\" onSubmit={handleFormSubmitEvent}>\n\t\t\t\t\t\t\t{inputs.map((field, i) => (\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tkey={field.data}\n\t\t\t\t\t\t\t\t\tfocused={i === 0}\n\t\t\t\t\t\t\t\t\telementType={field.elementType}\n\t\t\t\t\t\t\t\t\telementConfig={field.elementConfig}\n\t\t\t\t\t\t\t\t\tvalidation={{ ...field.validation }}\n\t\t\t\t\t\t\t\t\tvalue={field.value}\n\t\t\t\t\t\t\t\t\thandleChange={event =>\n\t\t\t\t\t\t\t\t\t\thandleFormChange(event, field.data)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleEnterPress={handleFormSubmitEvent}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t{showFormInvalidMessage ? (\n\t\t\t\t\t\t\t<FormErrorMessage errorType={formErrorType} />\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{error && authType === 'signup' ? (\n\t\t\t\t\t\t\t<AuthErrorMessage\n\t\t\t\t\t\t\t\terrorMessage={error.response.data.error.message}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"Confirm\"\n\t\t\t\t\t\t\thandleClick={handleFormSubmitEvent}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"Danger\" handleClick={handleCancelClick}>\n\t\t\t\t\t\t\tGo back\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nSignUp.propTypes = {\n\tisLoading: PropTypes.bool,\n\tisSignInLoading: PropTypes.bool,\n\tauthType: PropTypes.string,\n\terror: PropTypes.object,\n\tsentAuthForm: PropTypes.func,\n\tisRedirectedToAuth: PropTypes.bool,\n\tisBuilding: PropTypes.bool,\n};\n\n// Redux setup:\nconst mapStateToProps = state => {\n\treturn {\n\t\tisLoading: state.auth.isLoading,\n\t\tisSignInLoading: state.auth.isSignInLoading,\n\t\terror: state.auth.error,\n\t\tauthType: state.auth.authType,\n\t\tisLoggedIn: state.auth.isLoggedIn,\n\t\tisRedirectedToAuth: state.auth.isRedirectedToAuth,\n\t\tisBuilding: state.burgerBuilder.isBuilding,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsentAuthForm: (email, password, authType) =>\n\t\t\tdispatch(confirmAuth(email, password, authType)),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(SignUp);\n"],"sourceRoot":""}